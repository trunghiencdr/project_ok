/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.quanlituyen;

import connectSQL.LopKetNoi;
import controller.ChuyenManHinhView;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import module.Tuyen;
import java.sql.ResultSet;
import java.sql.Connection;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import moduledao.TuyenDao;
import view.JPanelQuanLiTuyen;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class JPanelDanhSachTuyen extends javax.swing.JPanel {

    private TuyenDao tuyenDao;
    private Connection connection;
    private ArrayList<Tuyen> DS;
    private DefaultTableModel tbmBangTuyen;
    private int count = 0;
    private int hangDangChon = -1;
    private DefaultListModel<String> lmTram;

    /**
     * Creates new form JPanelDanhSachTuyen
     */
    public JPanelDanhSachTuyen() {
        initComponents();
        jlTram.setEnabled(false);
        lmTram = new DefaultListModel<>();
        tuyenDao = new TuyenDao();
        connection = new LopKetNoi().getConnection();
        tbmBangTuyen = (DefaultTableModel) jtbTuyen.getModel();
        tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from Tuyen"), tbmBangTuyen);
    }

    private void loadTramVaoList() {
        try {
            ResultSet rs = LopKetNoi.select("select tenTram from tram");
            while (rs.next()) {
                lmTram.addElement(rs.getString(1));
            }
        } catch (Exception e) {
        }
        jlTram.setModel(lmTram);
    }

    private void loadDSTramVaoCBB() {
        try {
            PreparedStatement ps = connection.prepareStatement("select tenTram from Tram");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
//                cbbGoiYTram.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdlThuocTinhTuyen = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jlbTenDialog = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfMaTuyen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfTenTuyen = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaCacTramDiQua = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaKhoangCach = new javax.swing.JTextArea();
        btnXacNhan = new javax.swing.JButton();
        jlbMaTuyen = new javax.swing.JLabel();
        jlbCacTramDiQua = new javax.swing.JLabel();
        jlbKhoangCach = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jlbTenTuyen = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlTram = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTuyen = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtfTimKiem = new javax.swing.JTextField();
        cbbTiemKiem = new javax.swing.JComboBox<>();
        cbbSapXep = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnThongTIn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        jdlThuocTinhTuyen.setMinimumSize(new java.awt.Dimension(627, 621));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setEnabled(false);
        jPanel2.setMinimumSize(new java.awt.Dimension(588, 555));

        jlbTenDialog.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlbTenDialog.setForeground(new java.awt.Color(102, 102, 255));
        jlbTenDialog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTenDialog.setText("THÊM TUYẾN");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Mã tuyến:");

        jtfMaTuyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfMaTuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfMaTuyenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfMaTuyenKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Tên tuyến:");

        jtfTenTuyen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfTenTuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTenTuyenActionPerformed(evt);
            }
        });
        jtfTenTuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTenTuyenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTenTuyenKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Các trạm đi qua:");

        jtaCacTramDiQua.setColumns(20);
        jtaCacTramDiQua.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtaCacTramDiQua.setRows(5);
        jtaCacTramDiQua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtaCacTramDiQuaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtaCacTramDiQuaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jtaCacTramDiQua);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Khoảng cách trạm:");

        jtaKhoangCach.setColumns(20);
        jtaKhoangCach.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jtaKhoangCach.setRows(5);
        jtaKhoangCach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtaKhoangCachKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtaKhoangCachKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jtaKhoangCach);

        btnXacNhan.setBackground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnXacNhan.setText("XÁC NHẬN");
        btnXacNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXacNhanMouseClicked(evt);
            }
        });
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });
        btnXacNhan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnXacNhanKeyPressed(evt);
            }
        });

        jlbMaTuyen.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbMaTuyen.setForeground(new java.awt.Color(255, 51, 51));
        jlbMaTuyen.setText("Không được để trống");

        jlbCacTramDiQua.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbCacTramDiQua.setForeground(new java.awt.Color(255, 51, 51));
        jlbCacTramDiQua.setText("Không được để trống");

        jlbKhoangCach.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbKhoangCach.setForeground(new java.awt.Color(255, 51, 51));
        jlbKhoangCach.setText("Không được để trống");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Định dạng: trạm-trạm-trạm");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Định dạng: phút-phút");

        jlbTenTuyen.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        jlbTenTuyen.setForeground(new java.awt.Color(255, 51, 51));
        jlbTenTuyen.setText("Không được để trống");

        jScrollPane4.setViewportView(jlTram);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Các trạm hiện có");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(jlbTenDialog))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jlbCacTramDiQua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jtfMaTuyen)
                                                .addComponent(jtfTenTuyen)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                                .addComponent(jlbMaTuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jlbTenTuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel12)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jlbKhoangCach, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbTenDialog)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfMaTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jlbMaTuyen)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfTenTuyen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlbTenTuyen)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)))
                .addComponent(jLabel12)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbCacTramDiQua))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbKhoangCach)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jdlThuocTinhTuyenLayout = new javax.swing.GroupLayout(jdlThuocTinhTuyen.getContentPane());
        jdlThuocTinhTuyen.getContentPane().setLayout(jdlThuocTinhTuyenLayout);
        jdlThuocTinhTuyenLayout.setHorizontalGroup(
            jdlThuocTinhTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdlThuocTinhTuyenLayout.setVerticalGroup(
            jdlThuocTinhTuyenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdlThuocTinhTuyenLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTextField3.setText("jTextField3");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel10.setText("jLabel10");

        jLabel15.setText("jLabel15");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("DANH SÁCH TUYẾN");

        jtbTuyen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtbTuyen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tuyến", "Tên tuyến", "Danh sách trạm", "Thời gian(phút)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbTuyen.setGridColor(new java.awt.Color(255, 255, 255));
        jtbTuyen.setRowHeight(25);
        jtbTuyen.setSelectionBackground(new java.awt.Color(51, 204, 255));
        jtbTuyen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTuyenMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtbTuyenMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTuyen);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Chức năng");

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setText("SỬA");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Tìm kiếm:");

        jtfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiemKeyReleased(evt);
            }
        });

        cbbTiemKiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbTiemKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã tuyến", "Tên tuyến" }));

        cbbSapXep.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbbSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên tuyến a-z", "Tên tuyến z-a" }));
        cbbSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSapXepActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Sắp xếp:");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outline_arrow_back_black_24dp_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnThongTIn.setBackground(new java.awt.Color(255, 255, 255));
        btnThongTIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongTIn.setText("THÔNG TIN");
        btnThongTIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(227, 227, 227)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator1)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(59, 59, 59)
                                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(74, 74, 74)
                                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbbTiemKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbbSapXep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnThongTIn, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThongTIn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cbbTiemKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void batCacTruong() {
        jtfMaTuyen.setEditable(true);
        jtfTenTuyen.setEditable(true);
        jtaCacTramDiQua.setEditable(true);
        jtaKhoangCach.setEditable(true);
    }

    private void tatCacTruong() {
        jtfMaTuyen.setEditable(false);
        jtfTenTuyen.setEditable(false);
        jtaCacTramDiQua.setEditable(false);
        jtaKhoangCach.setEditable(false);
    }

    private void hienThiDialog(String tenDialog) {
        loadTramVaoList();
        switch (tenDialog) {
            case "THÊM TUYẾN":
                batCacTruong();
                setLabelThongBaoRong();
                setRong();
                break;
            case "SỬA TUYẾN":
                batCacTruong();
                setLabelThongBaoRong();
                jtfMaTuyen.setEditable(false);
                tuyenDao.getTuyenTuBang(hangDangChon, jtbTuyen, jtfMaTuyen, jtfTenTuyen, jtaCacTramDiQua, jtaKhoangCach);
                break;
            case "THÔNG TIN TUYẾN":
                tatCacTruong();
                setLabelThongBaoRong();
                tuyenDao.getTuyenTuBang(hangDangChon, jtbTuyen, jtfMaTuyen, jtfTenTuyen, jtaCacTramDiQua, jtaKhoangCach);
                break;
        }
        jlbTenDialog.setText(tenDialog);
        jdlThuocTinhTuyen.setLocationRelativeTo(this);
        jdlThuocTinhTuyen.setVisible(true);
    }

    private void setLabelThongBao() {
        jlbMaTuyen.setText("Không được để trống");
        jlbTenTuyen.setText("Không được để trống");
        jlbCacTramDiQua.setText("Không được để trống");
        jlbKhoangCach.setText("Không được để trống");
    }

    private void setLabelThongBaoRong() {
        jlbMaTuyen.setText(" ");
        jlbTenTuyen.setText(" ");
        jlbCacTramDiQua.setText(" ");
        jlbKhoangCach.setText(" ");
    }

    private void kiemTraJTAThoiGian() {
        String thoiGian = jtaKhoangCach.getText().trim();
        if (thoiGian.equals("")) {
            jlbKhoangCach.setText("Không được để trống");
        } else {
            String[] tachThoiGian = thoiGian.split("\\s*-\\s*");// khoang trang - khoang trang
            if (thoiGian.substring(thoiGian.length() - 1, thoiGian.length()).equals("-")) {
                jlbKhoangCach.setText("Không đúng định dạng");
            } else {
                for (String s : tachThoiGian) {
                    String tachTram[] = jtaCacTramDiQua.getText().trim().split("\\s*-\\s*");
                    for (String tg : tachThoiGian) {
                        try {
                            int tgInt = Integer.parseInt(tg);
                            if (tgInt == 0) {
                                jlbKhoangCach.setText("Thời gian phải khác không");
                            } else {// không đổi đc
                                if (tachThoiGian.length == tachTram.length - 1) {
                                    jlbKhoangCach.setText(" ");
                                } else {
                                    jlbKhoangCach.setText("Số lương thời gian phải bằng số trạm - 1");
                                }
                            }
                        } catch (Exception e) {
                            jlbKhoangCach.setText("Thời gian phải là một số");
                            break;
                        }
                    }

                }
            }
        }
    }

    private void kiemTraJTFMaTuyen() {
        String maTuyen = jtfMaTuyen.getText().trim();
        if (maTuyen.equals("")) {
            jlbMaTuyen.setText("Không được để trống");
        } else {// kiểm tra mã có bị trùng không
            try {
                ResultSet rs = LopKetNoi.select("select * from tuyen where maTuyen = ?", maTuyen);
                if (rs.next()) {
                    jlbMaTuyen.setText("Mã bị trùng");
                } else {
                    jlbMaTuyen.setText(" ");
                }
            } catch (Exception e) {
            }
        }
    }

    private void kiemTraJTFTenTuyen() {
        String tenTuyen = jtfTenTuyen.getText().trim();
        if (tenTuyen.equals("")) {
            jlbTenTuyen.setText("Không được để trống");
        } else {
            try {
                ResultSet rs = LopKetNoi.select("select * from tuyen where tenTuyen = ?", tenTuyen);
                if (rs.next()) {
                    jlbTenTuyen.setText("Tên bị trùng");
                } else {
                    jlbTenTuyen.setText(" ");
                }
            } catch (Exception e) {
            }
        }
    }

    private boolean kiemTraTramDiQuaDB() {
        ArrayList<String> DSTramDiQuaNhap = getCacTramDiQua();
        try {
            ResultSet rs = LopKetNoi.select("select maTuyen from tuyen");
            while (rs.next()) {
                ResultSet rs1 = LopKetNoi.select("select tenTram from tuyendiquatram where matuyen = ? order by STT", rs.getString(1));
                ArrayList<String> DSTram = new ArrayList<>();
                while (rs1.next()) {
                    DSTram.add(rs1.getString(1));
                }
                if (DSTram.equals(DSTramDiQuaNhap)) {
                    return false;
                }
            }
        } catch (Exception e) {
        }
        return true;
    }
    
    private void kiemTraJTACacTramDiQua() {
        String cacTramDiQua = jtaCacTramDiQua.getText().trim();
        if (cacTramDiQua.equals("")) {
            jlbCacTramDiQua.setText("Không được để trống");
        } else {
            String[] tachTram = cacTramDiQua.split("\\s*-\\s*");// khoang trang - khoang trang

            if (cacTramDiQua.substring(cacTramDiQua.length() - 1, cacTramDiQua.length()).equals("-")) {
                jlbCacTramDiQua.setText("Không đúng định dạng");

            } else {
                for (String s : tachTram) {
                    // kiem tra co tồn tại trạm này không
                    try {
                        ResultSet rs = LopKetNoi.select("select * from tram where tenTram=?", s);
                        if (rs.next()) { // nếu có tên trạm rồi thì ok
                            if (tachTram.length < 2) {
                                jlbCacTramDiQua.setText("Ít nhất 2 trạm");
                            } else {
                                //kiem tra xem co di lai tram khong
                                try {
//                                    ResultSet rs1 = LopKetNoi.select("select * from tuyendiquatram where exist", tachTram)
                                } catch (Exception e) {
                                }
                                // kiem tra xem co tồn tại trạm đi qua này chưa
                                if (kiemTraTramDiQuaDB()) {// nếu chưa có trong csdl
                                    jlbCacTramDiQua.setText(" ");
                                    kiemTraJTAThoiGian();
                                } else {
                                    jlbCacTramDiQua.setText("Các trạm đi qua đã tồn tại rồi");
                                }

                            }
                        } else {
                            jlbCacTramDiQua.setText("Không tồn tại trạm này");
                            return;
                        }
                    } catch (Exception e) {
                    }

                }
            }
        }
    }

    private void kiemTraThongTinNhap(String loai) {
        loai.toLowerCase();
        switch (loai) {
            case "mã tuyến":
                kiemTraJTFMaTuyen();
                break;
            case "tên tuyến":
                kiemTraJTFTenTuyen();
                break;
            case "các trạm đi qua":
                kiemTraJTACacTramDiQua();
                break;
            case "khoảng cách":
                kiemTraJTAThoiGian();
                break;
        }

    }

    private boolean kiemTraTruocKhiXacNhan() {
       if(jlbTenDialog.getText().equals("THÊM TUYẾN")) kiemTraJTFMaTuyen();
        kiemTraJTFTenTuyen();
        kiemTraJTACacTramDiQua();
        kiemTraJTAThoiGian();
        if (jlbMaTuyen.getText().equals(" ") && jlbMaTuyen.getText().equals(" ")
                && jlbCacTramDiQua.getText().equals(" ") && jlbKhoangCach.getText().equals(" ")) {
            return true;
        } else {
            return false;
        }
    }

    private ArrayList<String> getCacTramDiQua() {
        String[] tramDiQua = jtaCacTramDiQua.getText().trim().split("\\s*-\\s*");
        ArrayList<String> tam = new ArrayList<>();
        for (String s : tramDiQua) {
            tam.add(s);
        }
        return tam;
    }

    private ArrayList<Integer> getDSThoiGian() {
        String[] khoangCach = jtaKhoangCach.getText().trim().split("\\s*-\\s*");
        ArrayList<Integer> tam = new ArrayList<>();
        for (String s : khoangCach) {
            try {
                tam.add(Integer.parseInt(s));
            } catch (Exception e) {
                return null;
            }
        }
        return tam;
    }

    private Tuyen getTuyenTuDialog() {
        String maTuyen = jtfMaTuyen.getText().trim().toUpperCase();
        String tenTuyen = jtfTenTuyen.getText().trim().toUpperCase();
        ArrayList<String> cacTramDiQua = getCacTramDiQua();
        ArrayList<Integer> thoiGian = getDSThoiGian();
        return new Tuyen(maTuyen, tenTuyen, cacTramDiQua, thoiGian);
    }

    private void setRong() {
        jtfMaTuyen.setText("");
        jtfTenTuyen.setText("");
        jtaCacTramDiQua.setText("");
        jtaKhoangCach.setText("");
    }

    private void timKiemTram() {
        String[] cacTramDiQua = jtaCacTramDiQua.getText().trim().split("\\s*-\\s*");
        lmTram.setSize(0);
        String tenTram = cacTramDiQua[cacTramDiQua.length - 1];
        try {
            ResultSet rs = LopKetNoi.select("select tenTram from tram where tenTram like ?", "%" + tenTram + "%");
            while (rs.next()) {
                lmTram.addElement(rs.getString(1));
            }
        } catch (Exception e) {
        }
        jlTram.setModel(lmTram);
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        hienThiDialog("THÊM TUYẾN");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 dòng trong bảng");
        } else {
            hienThiDialog("SỬA TUYẾN");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void jtbTuyenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTuyenMousePressed
        // TODO add your handling code here:
        hangDangChon = jtbTuyen.getSelectedRow();
        if (hangDangChon != -1) {
            if (evt.getButton() == MouseEvent.BUTTON3) {
                hienThiDialog("THÔNG TIN TUYẾN");
            }
        }

    }//GEN-LAST:event_jtbTuyenMousePressed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (hangDangChon < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đối tượng! Vui lòng chọn 1 hàng trong bảng");

        } else {
            int input = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
            if (input == JOptionPane.YES_OPTION) {
                String maTuyen = jtbTuyen.getValueAt(hangDangChon, 0).toString();
                boolean kt = tuyenDao.xoaTuyenTrongDB(maTuyen);
                if (kt) {
                    tuyenDao.xoaTramKhoiBang(hangDangChon, tbmBangTuyen);
                    hangDangChon = -1;
                    jtbTuyen.clearSelection();
                } else {
                    JOptionPane.showMessageDialog(this, "Không thể xóa vì có tàu đang chạy trên tuyến này");
                }
            }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void jtfMaTuyenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfMaTuyenKeyReleased
        // TODO add your handling code here:
//        kiemTraThongTinNhap("mã tuyến");
    }//GEN-LAST:event_jtfMaTuyenKeyReleased

    private void jtfTenTuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTenTuyenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTenTuyenActionPerformed

    private void jtfTenTuyenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTenTuyenKeyReleased
        // TODO add your handling code here:
//        kiemTraThongTinNhap("tên tuyến");
    }//GEN-LAST:event_jtfTenTuyenKeyReleased

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        String loai = jlbTenDialog.getText().toLowerCase();
        if (kiemTraTruocKhiXacNhan()) {
            Tuyen tuyen = getTuyenTuDialog();
            switch (loai) {
                case "thêm tuyến":
                    tuyenDao.themTuyenVaoDB(tuyen);
                    tuyenDao.themTuyenVaoBang(tuyen, jtbTuyen);
                    hangDangChon = jtbTuyen.getRowCount() - 1;
                    setRong();
                    setLabelThongBao();
                    jtfMaTuyen.requestFocus();
                    break;
                case "sửa tuyến":
                    tuyenDao.suaTuyenTrongDB(tuyen);
                    tuyenDao.suaTuyenTrongBang(tuyen, hangDangChon, jtbTuyen);
                    jdlThuocTinhTuyen.dispose();
                    break;
            }
        } else {
            if (!loai.equalsIgnoreCase("thông tin tuyến")) {// neu khong phai thong tin tuyen thi ỉn ra
                JOptionPane.showMessageDialog(jdlThuocTinhTuyen, jlbTenDialog.getText() + " thất bại");
            } else {
                jdlThuocTinhTuyen.dispose();
            }
        }

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void jtaCacTramDiQuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaCacTramDiQuaKeyReleased
        // TODO add your handling code here:
        kiemTraThongTinNhap("các trạm đi qua");
        timKiemTram();
    }//GEN-LAST:event_jtaCacTramDiQuaKeyReleased

    private void jtaKhoangCachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaKhoangCachKeyReleased
        // TODO add your handling code here:
//        kiemTraThongTinNhap("khoảng cách");
    }//GEN-LAST:event_jtaKhoangCachKeyReleased

    private void jtfMaTuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfMaTuyenKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtfTenTuyen.requestFocus();
        }
    }//GEN-LAST:event_jtfMaTuyenKeyPressed

    private void jtfTenTuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTenTuyenKeyPressed
        // TODO add your handling code here:
        if (jlbTenDialog.getText().equalsIgnoreCase("thêm tuyến")) {
            if (evt.getKeyCode() == KeyEvent.VK_UP) {
                jtfMaTuyen.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtaCacTramDiQua.requestFocus();
        }

    }//GEN-LAST:event_jtfTenTuyenKeyPressed

    private void jtaCacTramDiQuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaCacTramDiQuaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtaKhoangCach.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jtfTenTuyen.requestFocus();
        }
    }//GEN-LAST:event_jtaCacTramDiQuaKeyPressed

    private void jtaKhoangCachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaKhoangCachKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnXacNhan.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jtaCacTramDiQua.requestFocus();
        }
    }//GEN-LAST:event_jtaKhoangCachKeyPressed

    private void btnXacNhanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnXacNhanKeyPressed
        // TODO add your handling code here:
        String loai = jlbTenDialog.getText().toLowerCase();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (kiemTraTruocKhiXacNhan()) {
                Tuyen tuyen = getTuyenTuDialog();
                switch (loai) {
                    case "thêm tuyến":
                        tuyenDao.themTuyenVaoDB(tuyen);
                        tuyenDao.themTuyenVaoBang(tuyen, jtbTuyen);
                        hangDangChon = jtbTuyen.getRowCount() - 1;
                        setRong();
                        setLabelThongBao();
                        jtfMaTuyen.requestFocus();
                        break;
                    case "sửa tuyến":
                        tuyenDao.suaTuyenTrongDB(tuyen);
                        tuyenDao.suaTuyenTrongBang(tuyen, hangDangChon, jtbTuyen);
                        jdlThuocTinhTuyen.dispose();
                        break;
                }
            } else {
                if (!loai.equalsIgnoreCase("thông tin tuyến")) {// neu khong phai thong tin tuyen thi ỉn ra
                    JOptionPane.showMessageDialog(jdlThuocTinhTuyen, jlbTenDialog.getText() + " thất bại");
                } else {
                    jdlThuocTinhTuyen.dispose();
                }
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jtaKhoangCach.requestFocus();
        }
    }//GEN-LAST:event_btnXacNhanKeyPressed

    private void btnXacNhanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXacNhanMouseClicked

    }//GEN-LAST:event_btnXacNhanMouseClicked

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jtfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiemKeyReleased
        // TODO add your handling code here:

        if (cbbTiemKiem.getSelectedIndex() == 0) {// tim kiem theo ma tuyen
            String maTuyen = jtfTimKiem.getText().trim();
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen where maTuyen like ?",
                    "%" + maTuyen + "%"), tbmBangTuyen);
        } else {// tim kiem theo ten tuyen
            String tenTuyen = jtfTimKiem.getText().trim();
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen where tenTuyen like ?",
                    "%" + tenTuyen + "%"), tbmBangTuyen);
        }
    }//GEN-LAST:event_jtfTimKiemKeyReleased

    private void cbbSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSapXepActionPerformed
        // TODO add your handling code here:
        if (cbbSapXep.getSelectedIndex() == 0) {// sap xep ten tuyen tu a - z
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen order by tentuyen ASC"), tbmBangTuyen);
        } else {
            tuyenDao.loadDSTuyenVaoBang(LopKetNoi.select("select * from tuyen order by tentuyen DESC"), tbmBangTuyen);
        }
    }//GEN-LAST:event_cbbSapXepActionPerformed

    private void jtbTuyenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTuyenMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jtbTuyenMouseClicked

    private void btnThongTInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTInActionPerformed
        // TODO add your handling code here:
        if (hangDangChon == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng trong bảng");
        } else
            hienThiDialog("THÔNG TIN TUYẾN");
    }//GEN-LAST:event_btnThongTInActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new ChuyenManHinhView(this, new JPanelQuanLiTuyen()).change();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongTIn;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbSapXep;
    private javax.swing.JComboBox<String> cbbTiemKiem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JDialog jdlThuocTinhTuyen;
    private javax.swing.JList<String> jlTram;
    private javax.swing.JLabel jlbCacTramDiQua;
    private javax.swing.JLabel jlbKhoangCach;
    private javax.swing.JLabel jlbMaTuyen;
    private javax.swing.JLabel jlbTenDialog;
    private javax.swing.JLabel jlbTenTuyen;
    private javax.swing.JTextArea jtaCacTramDiQua;
    private javax.swing.JTextArea jtaKhoangCach;
    private javax.swing.JTable jtbTuyen;
    private javax.swing.JTextField jtfMaTuyen;
    private javax.swing.JTextField jtfTenTuyen;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables
}
